{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, USER_LOADED, USER_AUTH_FAILURE, LOGIN_SUCCESS, LOGIN_FAILURE } from '../action/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  user: null\n};\n\nconst auth = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  console.log(payload);\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        user: payload\n      };\n\n    case USER_AUTH_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false\n      };\n\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true\n      };\n\n    case REGISTER_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        isAuthenticated: true,\n        ...payload\n      };\n\n    case LOGIN_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        isAuthenticated: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/fresh/Desktop/Green Kart Web-App/Green-Kart-Web-App/front-end/react-server/src/redux/reducer/authReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","USER_LOADED","USER_AUTH_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","token","localStorage","getItem","isAuthenticated","user","auth","state","action","type","payload","console","log","removeItem","setItem"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,EACIC,WADJ,EACiBC,iBADjB,EAEIC,aAFJ,EAEmBC,aAFnB,QAEwC,iBAFxC;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,UAAQD,IAAR;AACI,SAAKb,WAAL;AAEI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,IAAI,EAAEK;AAHH,OAAP;;AAMJ,SAAKb,iBAAL;AACIK,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AAEA,aAAO,EACH,GAAGN,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE;AAHd,OAAP;;AAMJ,SAAKV,gBAAL;AACIQ,MAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACT,KAAtC;AAEA,aAAO,EACH,GAAGM,KADA;AAEH,WAAGG,OAFA;AAGHN,QAAAA,eAAe,EAAE;AAHd,OAAP;;AAMJ,SAAKT,gBAAL;AACIO,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AAEA,aAAO,EACH,GAAGN,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE;AAHd,OAAP;;AAMJ,SAAKN,aAAL;AACII,MAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACT,KAAtC;AAEA,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGH,WAAGM;AAHA,OAAP;;AAMJ,SAAKX,aAAL;AACIG,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AAEA,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,eAAe,EAAE,KAFd;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAMJ;AACI,aAAOE,KAAP;AAvDR;AAyDH,CA7DD;;AA+DA,eAAeD,IAAf","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAILURE, \n    USER_LOADED, USER_AUTH_FAILURE, \n    LOGIN_SUCCESS, LOGIN_FAILURE } from '../action/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    user: null\n}\n\nconst auth = (state = initialState, action) => {\n    const { type, payload } = action;\n    console.log(payload);\n\n    switch (type) {\n        case USER_LOADED:\n\n            return {\n                ...state,\n                isAuthenticated: true,\n                user: payload\n            }\n\n        case USER_AUTH_FAILURE:\n            localStorage.removeItem('token');\n\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false\n            }\n\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', payload.token);\n\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true\n            }\n\n        case REGISTER_FAILURE:\n            localStorage.removeItem('token');\n\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false\n            }\n        \n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n\n            return {\n                ...state,\n                isAuthenticated: true,\n                ...payload\n            }\n            \n        case LOGIN_FAILURE:\n            localStorage.removeItem('token');\n\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}