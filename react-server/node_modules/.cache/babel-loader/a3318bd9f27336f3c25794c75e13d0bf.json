{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, USER_LOADED, USER_AUTH_FAILURE } from '../action/types';\nimport axios from 'axios';\nexport const loadUser = () => dispatch => {};\n\nconst register = (firstname, lastname, age, email, password, address, gender) => dispatch => {\n  const body = JSON.stringify({\n    firstname,\n    lastname,\n    age,\n    email,\n    password,\n    address,\n    gender\n  });\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  axios.post('/signUpForm', body, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(\"Error exists while trying to register user\" + err);\n    dispatch({\n      type: REGISTER_FAILURE\n    });\n  });\n};\n\nexport default register;","map":{"version":3,"sources":["/Users/fresh/Desktop/Green Kart Web-App/Green-Kart-Web-App/front-end/react-server/src/redux/action/registerAction.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","USER_LOADED","USER_AUTH_FAILURE","axios","loadUser","dispatch","register","firstname","lastname","age","email","password","address","gender","body","JSON","stringify","config","headers","post","then","response","console","log","data","type","payload","catch","err"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,EAA6CC,WAA7C,EAA0DC,iBAA1D,QAAmF,iBAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc,CAE3C,CAFM;;AAGP,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqDC,MAArD,KAAiER,QAAD,IAAc;AAC3F,QAAMS,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACT,IAAAA,SAAD;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA;AAArD,GAAf,CAAb;AAEA,QAAMI,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAgB;AADV;AADC,GAAf;AAKAf,EAAAA,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BL,IAA1B,EAAgCG,MAAhC,EACCG,IADD,CACMC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAnB,IAAAA,QAAQ,CAAC;AACLoB,MAAAA,IAAI,EAAE1B,gBADD;AAEL2B,MAAAA,OAAO,EAAEL,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAPD,EAQCG,KARD,CAQOC,GAAG,IAAI;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CK,GAA3D;AACAvB,IAAAA,QAAQ,CAAC;AACLoB,MAAAA,IAAI,EAAEzB;AADD,KAAD,CAAR;AAGH,GAbD;AAcH,CAtBD;;AAwBA,eAAeM,QAAf","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAILURE, USER_LOADED, USER_AUTH_FAILURE } from '../action/types';\nimport axios from 'axios';\n\nexport const loadUser = () => (dispatch) => {\n\n}\nconst register = (firstname, lastname, age, email, password, address, gender) => (dispatch) => {\n    const body = JSON.stringify({firstname, lastname, age, email, password, address, gender});\n\n    const config = {\n        headers : {\n            'Content-type': 'application/json'\n        }\n    }\n    axios.post('/signUpForm', body, config)\n    .then(response => {\n        console.log(response.data);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: response.data\n        });\n    })\n    .catch(err => {\n        console.log(\"Error exists while trying to register user\" + err);\n        dispatch({\n            type: REGISTER_FAILURE\n        });\n    })\n}\n\nexport default register;"]},"metadata":{},"sourceType":"module"}