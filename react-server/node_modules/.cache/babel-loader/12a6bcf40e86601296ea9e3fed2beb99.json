{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAILURE, USER_AUTH_FAILURE, USER_LOADED } from './types';\nimport setAuthToken from '../util/authToken';\nimport axios from 'axios';\nexport const loadUser = () => dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n    axios.get(\"/auth\").then(response => {\n      dispatch({\n        type: USER_LOADED,\n        payload: response.data\n      });\n      console.log(response.data.User);\n    }).catch(err => {\n      console.log(\"There was an error validating the token \" + err);\n      dispatch({\n        type: USER_AUTH_FAILURE\n      });\n    });\n  }\n};\nexport const register = (firstname, lastname, age, email, password, address, gender) => dispatch => {\n  const body = JSON.stringify({\n    firstname,\n    lastname,\n    age,\n    email,\n    password,\n    address,\n    gender\n  });\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  axios.post('/signUpForm', body, config).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(\"Error exists while trying to register user\" + err);\n    dispatch({\n      type: REGISTER_FAILURE\n    });\n  });\n};","map":{"version":3,"sources":["/Users/fresh/Desktop/Green Kart Web-App/Green-Kart-Web-App/front-end/react-server/src/redux/action/authAction.js"],"names":["REGISTER_SUCCESS","REGISTER_FAILURE","USER_AUTH_FAILURE","USER_LOADED","setAuthToken","axios","loadUser","dispatch","localStorage","token","get","then","response","type","payload","data","console","log","User","catch","err","register","firstname","lastname","age","email","password","address","gender","body","JSON","stringify","config","headers","post"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,EAA6CC,iBAA7C,EAAgEC,WAAhE,QAAmF,SAAnF;AACA,OAAOC,YAAP,MAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc;AACxC,MAAIC,YAAY,CAACC,KAAjB,EAAuB;AACnBL,IAAAA,YAAY,CAACI,YAAY,CAACC,KAAd,CAAZ;AAEAJ,IAAAA,KAAK,CAACK,GAAN,CAAU,OAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACdL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEV,WADD;AAELW,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAAT,CAAcG,IAA1B;AACH,KAPD,EAQCC,KARD,CAQOC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAA6CG,GAAzD;AACAb,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEX;AADD,OAAD,CAAR;AAGH,KAbD;AAcH;AACJ,CAnBM;AAqBP,OAAO,MAAMmB,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqDC,MAArD,KAAiErB,QAAD,IAAc;AAClG,QAAMsB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACT,IAAAA,SAAD;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA;AAArD,GAAf,CAAb;AAEA,QAAMI,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAgB;AADV;AADC,GAAf;AAMA5B,EAAAA,KAAK,CAAC6B,IAAN,CAAW,aAAX,EAA0BL,IAA1B,EAAgCG,MAAhC,EACCrB,IADD,CACMC,QAAQ,IAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACAR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,gBADD;AAELc,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAPD,EAQCI,KARD,CAQOC,GAAG,IAAI;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CG,GAA3D;AACAb,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH,GAbD;AAcH,CAvBM","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAILURE, USER_AUTH_FAILURE, USER_LOADED } from './types';\nimport setAuthToken  from '../util/authToken';\nimport axios from 'axios';\n\nexport const loadUser = () => (dispatch) => {\n    if (localStorage.token){\n        setAuthToken(localStorage.token);\n\n        axios.get(\"/auth\")\n        .then(response => {\n            dispatch({\n                type: USER_LOADED,\n                payload: response.data\n            });\n            console.log(response.data.User);\n        })\n        .catch(err => {\n            console.log(\"There was an error validating the token \" + err);\n            dispatch({\n                type: USER_AUTH_FAILURE\n            });\n        });\n    }\n}\n\nexport const register = (firstname, lastname, age, email, password, address, gender) => (dispatch) => {\n    const body = JSON.stringify({firstname, lastname, age, email, password, address, gender});\n\n    const config = {\n        headers : {\n            'Content-type': 'application/json'\n        }\n    }\n\n    axios.post('/signUpForm', body, config)\n    .then(response => {\n        console.log(response.data);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: response.data\n        });\n    })\n    .catch(err => {\n        console.log(\"Error exists while trying to register user\" + err);\n        dispatch({\n            type: REGISTER_FAILURE\n        });\n    })\n}"]},"metadata":{},"sourceType":"module"}